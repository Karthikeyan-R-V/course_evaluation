{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surendhar S\\\\Documents\\\\Web\\\\form\\\\frontend\\\\src\\\\Summary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = ({\n  data,\n  options\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      // Destroy the existing chart instance\n      chartRef.current.chartInstance.destroy();\n    }\n\n    // Render the new chart\n    const newChartInstance = new Chart(chartRef.current.getContext('2d'), {\n      type: 'bar',\n      data: data,\n      options: options\n    });\n\n    // Save the new chart instance to the ref\n    chartRef.current = newChartInstance;\n    return () => {\n      // Cleanup: Destroy the chart instance on component unmount\n      if (chartRef.current) {\n        chartRef.current.chartInstance.destroy();\n      }\n    };\n  }, [data, options]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(Summary, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useEffect","useRef","Bar","Chart","jsxDEV","_jsxDEV","Summary","data","options","_s","chartRef","current","chartInstance","destroy","newChartInstance","getContext","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Surendhar S/Documents/Web/form/frontend/src/Summary.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\n\r\nconst Summary = ({ data, options }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current) {\r\n      // Destroy the existing chart instance\r\n      chartRef.current.chartInstance.destroy();\r\n    }\r\n\r\n    // Render the new chart\r\n    const newChartInstance = new Chart(chartRef.current.getContext('2d'), {\r\n      type: 'bar',\r\n      data: data,\r\n      options: options,\r\n    });\r\n\r\n    // Save the new chart instance to the ref\r\n    chartRef.current = newChartInstance;\r\n\r\n    return () => {\r\n      // Cleanup: Destroy the chart instance on component unmount\r\n      if (chartRef.current) {\r\n        chartRef.current.chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [data, options]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,IAAIA,QAAQ,CAACC,OAAO,EAAE;MAChC;MACAD,QAAQ,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC;IAC1C;;IAEA;IACA,MAAMC,gBAAgB,GAAG,IAAIX,KAAK,CAACO,QAAQ,CAACC,OAAO,CAACI,UAAU,CAAC,IAAI,CAAC,EAAE;MACpEC,IAAI,EAAE,KAAK;MACXT,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEA;IACX,CAAC,CAAC;;IAEF;IACAE,QAAQ,CAACC,OAAO,GAAGG,gBAAgB;IAEnC,OAAO,MAAM;MACX;MACA,IAAIJ,QAAQ,CAACC,OAAO,EAAE;QACpBD,QAAQ,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,CAAC,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,EAAEC,OAAO,CAAC,CAAC;EAEnB,oBAAOH,OAAA;IAAQY,GAAG,EAAEP;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACZ,EAAA,CA5BIH,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}