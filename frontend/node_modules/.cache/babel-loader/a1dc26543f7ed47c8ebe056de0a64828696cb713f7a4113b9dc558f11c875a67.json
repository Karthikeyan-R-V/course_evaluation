{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surendhar S\\\\Documents\\\\Web\\\\form\\\\frontend\\\\src\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const subjects = [\"Probability,Statistics and Queuing Theory\", \"Digital Systems\", \"Discrete Structures\", \"Data Structures\", \"Foundations of Data Science\", \"Object Oriented Programming\", \"Engineering Exploration\", \"Digital Systems Laboratory\", \"Data Structures Laboratory\"];\n  const categories = [\"Planning and organization\", \"Presentation and Communication\", \"Student participation\", \"Class Management\"];\n  const [marks, setMarks] = useState({});\n  const fetchCourseMark = async (sub, category) => {\n    try {\n      const response = await fetch(`http://localhost:3001/dashboard`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          sub,\n          category\n        })\n      });\n      const data = await response.json();\n      return data[0].totalScore;\n    } catch (err) {\n      console.error(err);\n      return 0;\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const marksData = {};\n      for (const subject of subjects) {\n        for (const category of categories) {\n          const key = `${subject}-${category}`;\n          marksData[key] = await fetchCourseMark(subject, category);\n        }\n      }\n      console.log(marksData);\n      setMarks(marksData);\n    };\n    fetchData();\n  }, []);\n  const totRes = sub => {\n    let res = 0;\n    categories.map(category => {\n      res += marks[`${sub}-${category}`];\n    });\n    return res;\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-bordered table-striped\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Course Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: subjects.map((subject, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), categories.map((category, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: marks[`${subject}-${category}`]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totRes(subject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"siCgcj09drwRr/+RtsPzADjUniQ=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Admin","_s","subjects","categories","marks","setMarks","fetchCourseMark","sub","category","response","fetch","method","headers","body","JSON","stringify","data","json","totalScore","err","console","error","fetchData","marksData","subject","key","log","totRes","res","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["C:/Users/Surendhar S/Documents/Web/form/frontend/src/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Admin = () => {\r\n    const subjects = [\"Probability,Statistics and Queuing Theory\", \"Digital Systems\", \"Discrete Structures\",\"Data Structures\",\"Foundations of Data Science\",\"Object Oriented Programming\",\"Engineering Exploration\",\"Digital Systems Laboratory\",\"Data Structures Laboratory\"];\r\n    const categories = [\"Planning and organization\", \"Presentation and Communication\", \"Student participation\", \"Class Management\"];\r\n\r\n    const [marks, setMarks] = useState({});\r\n\r\n    const fetchCourseMark = async (sub, category) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/dashboard`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ sub, category }),\r\n            });\r\n            const data = await response.json();\r\n            return data[0].totalScore;\r\n        } catch (err) {\r\n            console.error(err);\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const marksData = {};\r\n            for (const subject of subjects) {\r\n                for (const category of categories) {\r\n                    const key = `${subject}-${category}`;\r\n                    marksData[key] = await fetchCourseMark(subject, category);\r\n                }\r\n            }\r\n            console.log(marksData);\r\n            setMarks(marksData);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const totRes = (sub) => {\r\n        let res = 0;\r\n        categories.map((category) => {\r\n            res+=marks[`${sub}-${category}`];\r\n        })\r\n        return res;\r\n    }\r\n\r\n    return (\r\n        <table className='table table-bordered table-striped'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Course Name</th>\r\n                    {categories.map((category, index) => (\r\n                        <th key={index}>{category}</th>\r\n                    ))}\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {subjects.map((subject, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                        <td>{subject}</td>\r\n                        {categories.map((category, colIndex) => (\r\n                            <td key={colIndex}>{marks[`${subject}-${category}`]}</td>\r\n                        ))}\r\n                        <td>{totRes(subject)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}