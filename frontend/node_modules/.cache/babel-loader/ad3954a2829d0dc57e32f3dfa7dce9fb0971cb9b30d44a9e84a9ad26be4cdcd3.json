{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surendhar S\\\\Documents\\\\Web\\\\form\\\\frontend\\\\src\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const subjects = [\"Probability,Statistics and Queuing Theory\", \"Digital Systems\", \"Discrete Structures\", \"Data Structures\", \"Foundations of Data Science\", \"Object Oriented Programming\", \"Engineering Exploration\", \"Digital Systems Laboratory\", \"Data Structures Laboratory\"];\n  const categories = [\"Planning and organization\", \"Presentation and Communication\", \"Student participation\", \"Class Management\"];\n  const [marks, setMarks] = useState({});\n  const [no, setNo] = useState({});\n  const fetchCourseMark = async (sub, category) => {\n    try {\n      const response = await fetch(`http://localhost:3001/dashboard`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          sub,\n          category\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      return data[0].totalScore;\n    } catch (err) {\n      console.error(err);\n      return 0;\n    }\n  };\n  const fetchStdCount = async sub => {\n    try {\n      const response = await fetch(`http://localhost:3001/student/${sub}`);\n      const data = await response.json();\n      console.log(data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      return 0;\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const marksData = {};\n      for (const subject of subjects) {\n        for (const category of categories) {\n          const key = `${subject}-${category}`;\n          marksData[key] = await fetchCourseMark(subject, category);\n        }\n      }\n      console.log(marksData);\n      setMarks(marksData);\n    };\n    const fetchStdCountData = async () => {\n      const stdCount = {};\n      for (const subject of subjects) {\n        stdCount[subject] = await fetchStdCount(subject);\n        console.log(stdCount[subject]);\n      }\n      console.log(stdCount);\n      setNo(stdCount);\n    };\n    fetchData();\n    fetchStdCountData();\n  }, []);\n  const totRes = sub => {\n    let tot = 0;\n    for (const category of categories) {\n      const key = `${sub}-${category}`;\n      tot += marks[key];\n    }\n    return tot;\n  };\n  const average = sub => {\n    if (no[sub] === 0) return 0;\n    return Math.round(totRes(sub) / no[sub]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-bordered table-striped\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Course Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"No of Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: subjects.map((subject, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), categories.map((category, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: marks[`${subject}-${category}`]\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: no[subject]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totRes(subject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: average(subject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"XhdkxAsB0fnvk7FEK8K9UMjyuoQ=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Admin","_s","subjects","categories","marks","setMarks","no","setNo","fetchCourseMark","sub","category","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","totalScore","err","error","fetchStdCount","fetchData","marksData","subject","key","fetchStdCountData","stdCount","totRes","tot","average","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["C:/Users/Surendhar S/Documents/Web/form/frontend/src/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Admin = () => {\r\n    const subjects = [\"Probability,Statistics and Queuing Theory\", \"Digital Systems\", \"Discrete Structures\",\"Data Structures\",\"Foundations of Data Science\",\"Object Oriented Programming\",\"Engineering Exploration\",\"Digital Systems Laboratory\",\"Data Structures Laboratory\"];\r\n    const categories = [\"Planning and organization\", \"Presentation and Communication\", \"Student participation\", \"Class Management\"];\r\n\r\n    const [marks, setMarks] = useState({});\r\n    const [no, setNo] = useState({});\r\n\r\n    const fetchCourseMark = async (sub, category) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/dashboard`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ sub, category }),\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            return data[0].totalScore;\r\n        } catch (err) {\r\n            console.error(err);\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    const fetchStdCount = async (sub) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/student/${sub}`);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            return data;\r\n        } catch (err) {\r\n            console.error(err);\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const marksData = {};\r\n            for (const subject of subjects) {\r\n                for (const category of categories) {\r\n                    const key = `${subject}-${category}`;\r\n                    marksData[key] = await fetchCourseMark(subject, category);\r\n                }\r\n            }\r\n            console.log(marksData);\r\n            setMarks(marksData);\r\n        };\r\n\r\n        const fetchStdCountData = async () => {\r\n            const stdCount = {};\r\n            for (const subject of subjects) {\r\n                stdCount[subject] = await fetchStdCount(subject);\r\n                console.log(stdCount[subject]);\r\n            }\r\n            console.log(stdCount);\r\n            setNo(stdCount);\r\n        };\r\n\r\n        fetchData();\r\n        fetchStdCountData();\r\n    }, []);\r\n\r\n    const totRes = (sub) => {\r\n        let tot = 0;\r\n        for(const category of categories){\r\n            const key = `${sub}-${category}`;\r\n            tot+=marks[key];\r\n        }\r\n        return tot;\r\n    };\r\n\r\n    const average = (sub) => {\r\n        if(no[sub]===0) return 0;\r\n        return Math.round(totRes(sub)/no[sub]);\r\n    };\r\n\r\n    return (\r\n        <table className='table table-bordered table-striped'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Course Name</th>\r\n                    {categories.map((category, index) => (\r\n                        <th key={index}>{category}</th>\r\n                    ))}\r\n                    <th>No of Students</th>\r\n                    <th>Total</th>\r\n                    <th>Average</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {subjects.map((subject, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                        <td>{subject}</td>\r\n                        {categories.map((category, colIndex) => (\r\n                            <td key={colIndex}>{marks[`${subject}-${category}`]}</td>\r\n                        ))}\r\n                        <td>{no[subject]}</td>\r\n                        <td>{totRes(subject)}</td>\r\n                        <td>{average(subject)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}