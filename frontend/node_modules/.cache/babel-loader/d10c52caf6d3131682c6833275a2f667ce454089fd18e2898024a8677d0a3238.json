{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surendhar S\\\\Documents\\\\Web\\\\form\\\\frontend\\\\src\\\\Admin2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin2 = () => {\n  _s();\n  const [std, setStd] = useState([{}]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const stdListResponse = await fetch('http://localhost:3001/studentList');\n        const stdList = await stdListResponse.json();\n        console.log(stdList);\n        stdList.forEach(student => {\n          setStd({\n            Name: student.StdName,\n            RegNo: student.RegNo\n          });\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Register No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: std.map(student => {\n        /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.RegNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, student.RegNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin2, \"RQ9eTRJjOjaJKIYbkDypgFkumdE=\");\n_c = Admin2;\nexport default Admin2;\nvar _c;\n$RefreshReg$(_c, \"Admin2\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Admin2","_s","std","setStd","fetchData","stdListResponse","fetch","stdList","json","console","log","forEach","student","Name","StdName","RegNo","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/Surendhar S/Documents/Web/form/frontend/src/Admin2.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Admin2 = () => {\r\n    const [std,setStd] = useState([{}]);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const stdListResponse = await fetch('http://localhost:3001/studentList');\r\n                const stdList = await stdListResponse.json();\r\n                console.log(stdList);\r\n                stdList.forEach((student) => {\r\n                    setStd({Name:student.StdName,RegNo:student.RegNo})\r\n                })\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Register No</th>\r\n                    <th>Student Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n               {std.map((student) => {\r\n                <tr key={student.RegNo}>\r\n                    <td>{student.RegNo}</td>\r\n                    <td>{student.Name}</td>\r\n                </tr>\r\n               })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Admin2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACxE,MAAMC,OAAO,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;QAC5CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpBA,OAAO,CAACI,OAAO,CAAEC,OAAO,IAAK;UACzBT,MAAM,CAAC;YAACU,IAAI,EAACD,OAAO,CAACE,OAAO;YAACC,KAAK,EAACH,OAAO,CAACG;UAAK,CAAC,CAAC;QACtD,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDZ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAAkB,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBtB,OAAA;UAAAkB,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRtB,OAAA;MAAAkB,QAAA,EACIf,GAAG,CAACoB,GAAG,CAAEV,OAAO,IAAK;QACrB,aAAAb,OAAA;UAAAkB,QAAA,gBACIlB,OAAA;YAAAkB,QAAA,EAAKL,OAAO,CAACG;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBtB,OAAA;YAAAkB,QAAA,EAAKL,OAAO,CAACC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFlBT,OAAO,CAACG,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGlB,CAAC;MACN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAACpB,EAAA,CAtCID,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}